"""""""""""""""""""""""""""""""
"
" VIMRC
"
" Contents:
"   1. Plugins
"     1.1. Syntax Highlighting
"     1.2. Git
"     1.3. Code helpers
"     1.4. Misc. conveniences
"   2. Config
"     2.1. Appearance & theming
"     2.2. General editor settings
"     2.3. Key mapping
"     2.4. CtrlP Config
"     2.5. Conveniences
"     2.6. White space
"   3. Thoughtbot Config
"
"""""""""""""""""""""""""""""""

set nocompatible              " be iMproved, required
filetype off                  " required

call plug#begin('~/.vim/plugged')

"""""""""""""""""""""""""""""""
" 1.1. Syntax Highlighting
"""""""""""""""""""""""""""""""

" Coffeescript
Plug 'kchmck/vim-coffee-script'
Plug 'mtscout6/vim-cjsx'

" Typescript
Plug 'leafgarland/typescript-vim'

" ES6
Plug 'othree/yajs.vim'

" (S)CSS
Plug 'JulesWang/css.vim'
Plug 'cakebaker/scss-syntax.vim'

" HTML5
Plug 'othree/html5.vim'

" Less
Plug 'groenewege/vim-less'

" Autocompletions
Plug 'Shougo/deoplete.nvim'

"""""""""""""""""""""""""""""""
" 1.2. Git things
"""""""""""""""""""""""""""""""

" Git gutter
Plug 'airblade/vim-gitgutter'

" Git wrapper
Plug 'tpope/vim-fugitive'

" Git syntax stuff
Plug 'tpope/vim-git'

"""""""""""""""""""""""""""""""
" 1.3. Code helpers
"""""""""""""""""""""""""""""""

" Commenting
" Use gcc to comment/uncomment lines
Plug 'tpope/vim-commentary'

" Surround (insert surrounding quotes etc)
Plug 'tpope/vim-surround'

" Auto-closing tags etc.
Plug 'Raimondi/delimitMate'

" Tab completions
Plug 'ervandew/supertab'

" Dash for documentation
Plug 'rizzatti/dash.vim'

" Editor Config
Plug 'editorconfig/editorconfig-vim'

" Autoprefixer
Plug 'daneden/vim-autoprefixer'

"""""""""""""""""""""""""""""""
" 1.4. Misc. conveniences
"""""""""""""""""""""""""""""""

" Powerline
Plug 'bling/vim-airline'

" Transparent pasting (cmd-v works as expected)
Plug 'ConradIrwin/vim-bracketed-paste'

" Color theme
Plug 'mhartington/oceanic-next'

" Show whitespace
Plug 'Yggdroot/indentLine'

" Dim inactive panes
Plug 'blueyed/vim-diminactive'

" Fuzzy file/buffer finder
Plug 'ctrlpvim/ctrlp.vim'

" Ag
Plug 'rking/ag.vim'

" Smarter default config
Plug 'tpope/vim-sensible'

" All of your Plugins must be added before the following line
call plug#end()
" Put your non-Plugin stuff after this line

"==============================
" MARK: 2. Configuration
"==============================

"""""""""""""""""""""""""""""""
" 2.1. Appearance & theming
"""""""""""""""""""""""""""""""

" Set syntax highlighting
syntax on

" Set linenums
set number

" Highlight cursor column & row
set cursorline
set cursorcolumn

hi CursorLineNR cterm=bold
augroup CLNRSet
    autocmd! ColorScheme * hi CursorLineNR cterm=bold
augroup END

" Theme
syntax enable
let $NVIM_TUI_ENABLE_TRUE_COLOR=1
set t_Co=256
colorscheme OceanicNext
set background=dark

let g:airline_powerline_fonts=1
let g:airline_theme='oceanicnext'

" Enable the list of buffers
let g:airline#extensions#tabline#enabled = 1

" Show just the filename
let g:airline#extensions#tabline#fnamemod = ':t'

" This allows buffers to be hidden if you've modified a buffer.
" This is almost a must if you wish to use buffers in this way.
set hidden

" Dim inactive windows
autocmd VimEnter * DimInactive

" Set custom syntaxes
autocmd BufRead,BufNewFile *.es6 setfiletype javascript

"""""""""""""""""""""""""""""""
" 2.2. General editor settings
"""""""""""""""""""""""""""""""

" Always use PHP/Python-style regex
nnoremap / /\v
vnoremap / /\v

" Set smart case-matching for search
" This means searching for lowercase phrases matches both cases,
" and searching for uppercase matches only uppercase.
" Example: /ste will match Stephen, step, and misstep, but
" /Step will only match Stephen
set ignorecase
set smartcase

" Always search globally
set gdefault

" Turn off search highlighting (after search is complete)
set nohlsearch

" Faster keyboard navigation
set ttyfast
set lazyredraw

" Syntax coloring lines that are too long just slows down the world
set synmaxcol=128

"""""""""""""""""""""""""""""""
" 2.3. Key mapping
"""""""""""""""""""""""""""""""

" Clear search highlighting on <esc>
nnoremap <silent> <esc> :noh<CR><esc>

" Toggle folds with space
nnoremap <space> za

" Change leader key to something more accessible
let mapleader=","

" To open a new empty buffer
" This replaces :tabnew which I used to bind to this mapping
nmap <leader>T :enew<cr>

" Move to the next buffer
nmap <leader>l :bnext<CR>

" Move to the previous buffer
nmap <leader>h :bprevious<CR>

" In order for `,h` mapping to work, we need to disable gitgutter's mapping
let g:gitgutter_map_keys = 0

" Close the current buffer and move to the previous one
" This replicates the idea of closing a tab
nmap <leader>q :bp <BAR> bd #<CR>

" Show all open buffers and their status
nmap <leader>bl :ls<CR>

" Swap to previously focused tab
nmap <leader><leader> :b#<CR>

" Remap split navigation
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Set mapping to navigate back and forth in a query
nnoremap cn :cn<cr>
nnoremap cp :cp<cr>

" Remap : to ; to save having to hit shift
nnoremap ; :

"""""""""""""""""""""""""""""""
" 2.4. CtrlP Config
"""""""""""""""""""""""""""""""

let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'

" Set CWD of CtrlP to the nearest parent with .git
let g:ctrlp_working_path_mode = 'ra'

" Sane Ignore For ctrlp
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\.git$\|\.hg$\|\.svn$\|\.yardoc\|public\/images\|public\/system\|data\|log\|tmp$',
  \ 'file': '\.exe$\|\.so$\|\.dat$'
  \ }

"""""""""""""""""""""""""""""""
" 2.5. Conveniences
"""""""""""""""""""""""""""""""

" Set tab options
" Expand tabs to spaces
set expandtab
" Set tab size
set tabstop=2
set shiftwidth=2

" Allow mouse interaction
set mouse=a

" Automatically make splits equal in size
autocmd VimResized * wincmd =

" Enable system clipboard
set clipboard=unnamed
set clipboard+=unnamedplus

" Automatically refresh changed files (if the buffer is unchanged)
set autoread

" Set motions to navigate displayed lines instead of file lines
noremap  <buffer> <silent> k gk
noremap  <buffer> <silent> j gj
noremap  <buffer> <silent> 0 g0
noremap  <buffer> <silent> $ g$

" Create an 'undo file' that stores changes even when closing files
set undofile


"""""""""""""""""""""""""""""""
" 2.6. White space
"""""""""""""""""""""""""""""""

" Removes trailing spaces
function! TrimWhiteSpace()
    %s/\s\+$//e
endfunction

nnoremap <silent> <Leader>rts :call TrimWhiteSpace()<CR>

" Automatically trim whitespace on save
autocmd FileWritePre    * :call TrimWhiteSpace()
autocmd FileAppendPre   * :call TrimWhiteSpace()
autocmd FilterWritePre  * :call TrimWhiteSpace()
autocmd BufWritePre     * :call TrimWhiteSpace()

autocmd BufWritePre * :%s/\s\+$//e

"==============================
" MARK: 3. Thoughtbot Config
"==============================

" Most of the rules from here on out are stolen from thoughtbot/dotfiles
" Make it obvious where 120 characters is
set textwidth=120
set colorcolumn=+1

augroup vimrcEx
  autocmd!

  " When editing a file, always jump to the last known cursor position.
  " Don't do it for commit messages, when the position is invalid, or when
  " inside an event handler (happens when dropping a file on gvim).
  autocmd BufReadPost *
    \ if &ft != 'gitcommit' && line("'\"") > 0 && line("'\"") <= line("$") |
    \   exe "normal g`\"" |
    \ endif

  " Cucumber navigation commands
  autocmd User Rails Rnavcommand step features/step_definitions -glob=**/* -suffix=_steps.rb
  autocmd User Rails Rnavcommand config config -glob=**/* -suffix=.rb -default=routes

  " Set syntax highlighting for specific file types
  autocmd BufRead,BufNewFile Appraisals set filetype=ruby
  autocmd BufRead,BufNewFile *.md set filetype=markdown

  " Enable spellchecking for Markdown
  autocmd FileType markdown setlocal spell

  " Automatically wrap at 80 characters for Markdown
  autocmd BufRead,BufNewFile *.md setlocal textwidth=80

  " Automatically wrap at 72 characters and spell check git commit messages
  autocmd FileType gitcommit setlocal textwidth=72
  autocmd FileType gitcommit setlocal spell

  " Allow stylesheets to autocomplete hyphenated words
  autocmd FileType css,scss,sass setlocal iskeyword+=-
augroup END

set backspace=2   " Backspace deletes like most programs in insert mode
set nobackup
set nowritebackup
set noswapfile    " http://robots.thoughtbot.com/post/18739402579/global-gitignore#comment-458413287
set history=50
set ruler         " show the cursor position all the time
set showcmd       " display incomplete commands
set incsearch     " do incremental searching
set laststatus=2  " Always display the status line
set autowrite     " Automatically :write before running commands

"==============================
" MARK: End of Thoughbot config
"==============================

" Make comments italicized
" This has to appear after all other appearance settings
highlight Comment cterm=italic


